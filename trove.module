<?php
/**
 * @file
 * The Trove module.
 */

use Drupal\trove\TroveAPI;

// Trove API base URL.
define('TROVE_BASE_URL', 'http://api.trove.nla.gov.au/');
// The earleist 'from' date for all trove results.
define('TROVE_FROM_DATE', '2012-04-04T00:00:00Z');
// Trove search method.
define('TROVE_RESULT', 'result');
// Trove contributor search method.
define('TROVE_CONTRIBUTOR', 'contributor');
// Trove newspaper search method.
define('TROVE_RECORD_NEWSPAPER', 'newspaper');
// Trove work method.
define('TROVE_RECORD_WORK', 'work');
// Trove record search method.
define('TROVE_RECORD_LIST', 'list');
// Trove newspaper title search method.
define('TROVE_NEWSPAPER_TITLE', 'newspaper/title');
// Trove newspaper titles search method.
define('TROVE_NEWSPAPER_TITLES', 'newspaper/titles');

/**
 * Implements hook_menu().
 */
function trove_menu() {
  $items['admin/config/services/trove'] = array(
    'title' => 'Trove',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('trove_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'description' => 'Change settings for the trove module.',
    'file' => 'trove.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function trove_permission() {
  return array(
    'administer torve' => array('title' => t('Administer trove settings')),
  );
}

/**
 * Get the available zones.
 *
 * See @link http://help.nla.gov.au/trove/building-with-trove/api-technical-guide Trove API facets documentation @endlink
 * for detailed facets information.
 *
 * @return array
 *   Array of trove zones.
 */
function trove_get_zones() {
  $zones = array(
    'all',
    'article',
    'book',
    'collection',
    'list',
    'map',
    'music',
    'newspaper',
    'people',
    'picture',
    'website',
  );
  return array_combine($zones, $zones);
}

/**
 * Get the available facet formats.
 *
 * See @link http://help.nla.gov.au/trove/building-with-trove/api-technical-guide#anchor-8 Trove API facets documentation @endlink
 * for detailed facets information.
 *
 * @return array
 *   Array of facets formats.
 */
function trove_get_facets_format() {
  return array(
    'Archived website' => 'Archved website',
    'Art work' => 'Art work',
    'Article' => array(
      'Article/Abstract' => 'Abstract',
      'Article/Book chapter' => 'Book chapter',
      'Article/Conference paper' => 'Conference Paper',
      'Article/Journal or magazne article' => 'Journal or magazine article',
      'Article/Other article' => 'Other article',
      'Article/Report' => 'Report',
      'Article/Review' => 'Review',
      'Article/Working paper' => 'Working paper',
    ),
    'Audio book' => 'Audio book',
    'Book' => array(
      'Book/Braille' => 'Book/Braille',
      'Book/Illustrated' => 'Book/Illustrated',
      'Book/Large print' => 'Book/Large print',
    ),
    'Conference Proceedings' => 'Conference Proceedings',
    'Data set' => 'Data set',
    'Map' => array(
      'Map/Aerial photograph' => 'Aerial photograph',
      'Map/Atlas' => 'Atlas',
      'Map/Braille' => 'Braille',
      'Map/Electronic' => 'Electronic',
      'Map/Globe or object' => 'Globe or object',
      'Map/Large print' => 'Large print',
      'Map/Map series' => 'Map series',
      'Map/Microform' => 'Microform',
      'Map/Single map' => 'Single map',
    ),
    'Object' => 'Object',
    'Periodical' => array(
      'Periodical/Journal, magazine, other' => 'Journal, magazine, other',
      'Periodical/Newspaper' => 'Newspaper',
    ),
    'Photograph' => 'Photograph',
    'Poster, chart, other' => 'Poster, chart, other',
    'Published' => 'Published',
    'Sheet music' => 'Sheet music',
    'Sound' => array(
      'Sound/Interview, lecture, talk' => 'Interview, lecture, talk',
      'Sound/Other sound' => 'Other sound',
      'Sound/Recorded music' => 'Recorded music',
    ),
    'Thesis' => 'Thesis',
    'Unpublished' => 'Unpublished',
    'Video' => array(
      'Video/Captioned' => 'Video/Captioned',
    ),
  );
}

/**
 * Get the availability options.
 *
 * See @link http://help.nla.gov.au/trove/building-with-trove/api-technical-guide#anchor-8 Trove API facets documentation @endlink
 * for detailed facets information.
 *
 * @return array
 *   An array of availability facets
 */
function trove_get_facets_availability() {
  return array(
    'y' => 'online',
    'y/f' => 'freely accessible online',
    'y/r' => 'payment, subscription or membership required',
    'y/s' => 'subscription required',
    'y/u' => 'possibly online',
  );
}

/**
 * Get the category options.
 *
 * See @link http://help.nla.gov.au/trove/building-with-trove/api-technical-guide#anchor-8 Trove API facets documentation @endlink
 * for detailed facets information.
 *
 * @return array
 *   An array of category facets
 */
function trove_get_facets_category() {
  return array(
    'Article' => 'Article',
    'Advertising' => 'Advertising',
    'Details lists, results, guides' => 'Details lists, results, guides',
    'Family notices' => 'Family notices',
    'Literature' => 'Literature',
  );
}

/**
 * Implements hook_cron().
 */
function trove_cron() {
  // Refresh the cache with trove api data that doesn't regularly change,
  // e.g. Newspaper titles and contributors.
  if (variable_get('trove_cache_items_cron', TRUE)) {
    TroveAPI::factory(TROVE_CONTRIBUTOR)->query();
    TroveAPI::factory(TROVE_NEWSPAPER_TITLES)->query();
  }
}

/**
 * Implements hook_help().
 */
function trove_help($path, $arg) {
  switch ($path) {
    case 'admin/help#trove':
      $output = '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Trove module provides a simple Drupal API around the National Library of Australia\'s <a href="@trove_link">Trove API service</a>.', array('@trove_link' => 'http://help.nla.gov.au/trove/building-with-trove/api')) . '</p>';
      $output .= '<p>' . t('The Trove module can be used as a standalone API for other modules wishing to use the Trove API service. It provides the following:');
      $output .= '<ul><li>' . t('Caching of requests, with user defined cache expiry.') . '</li>';
      $output .= '<li>' . t('Storage of API key.') . '</li>';
      $output .= '<li>' . t('Simple interface and wrapper functions and around the Trove API services.') . '</li>';
      $output .= '<li>' . t('Utility functions to return lists of facet, zones, parameters, and other Trove API information.') . '</li>';
      $output .= '<li>' . t('Error handling and logging.') . '</li></p>';
      return $output;
      
    case 'admin/config/services/trove':
      return '<p>' . t('API Key from Trove (see the <a href="@trove_link">Trove API page</a> to apply for an API  key).', array('@trove_link' => url('http://trove.nla.gov.au/general/api'))) . '</p>';
  }
}
